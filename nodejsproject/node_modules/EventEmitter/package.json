{
  "_args": [
    [
      {
        "raw": "EventEmitter",
        "scope": null,
        "escapedName": "EventEmitter",
        "name": "EventEmitter",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\nodejsproject"
    ]
  ],
  "_from": "EventEmitter@latest",
  "_id": "EventEmitter@1.0.0",
  "_inCache": true,
  "_location": "/EventEmitter",
  "_nodeVersion": "5.9.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/EventEmitter-1.0.0.tgz_1459755824321_0.060800882056355476"
  },
  "_npmUser": {
    "name": "zlobin",
    "email": "creastar@gmail.com"
  },
  "_npmVersion": "3.7.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "EventEmitter",
    "scope": null,
    "escapedName": "EventEmitter",
    "name": "EventEmitter",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/EventEmitter/-/EventEmitter-1.0.0.tgz",
  "_shasum": "24924a0a92bba6cd6e2f922b13dda812b18ab471",
  "_shrinkwrap": null,
  "_spec": "EventEmitter",
  "_where": "E:\\nodejsproject",
  "author": {
    "name": "Eugene Zlobin",
    "email": "creastar@gmail.com",
    "url": "https://zlobin.pro/"
  },
  "bugs": {
    "url": "https://github.com/Zlobin/EventEmitter/issues"
  },
  "dependencies": {
    "gulp-babel": "^6.1.2",
    "gulp-eslint": "^2.0.0",
    "gulp-rename": "^1.2.2",
    "gulp-size": "^2.1.0",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-uglify": "^1.5.3"
  },
  "description": "Javascript Event Emitter",
  "devDependencies": {
    "babel-core": "^6.7.4",
    "babel-plugin-transform-export-extensions": "^6.5.0",
    "babel-plugin-transform-object-rest-spread": "^6.6.5",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-stage-2": "^6.5.0",
    "eslint-config-airbnb": "^6.2.0",
    "eslint-plugin-react": "^4.2.3",
    "expect": "^1.16.0",
    "gulp": "github:gulpjs/gulp#4.0",
    "gulp-cli": "github:gulpjs/gulp-cli",
    "gulp-load-plugins": "^1.2.0",
    "install": "^0.6.1",
    "mocha": "^2.4.5",
    "npm": "^3.8.3",
    "source-map": "^0.5.3"
  },
  "directories": {},
  "dist": {
    "shasum": "24924a0a92bba6cd6e2f922b13dda812b18ab471",
    "tarball": "https://registry.npmjs.org/EventEmitter/-/EventEmitter-1.0.0.tgz"
  },
  "engines": {
    "node": ">=0.12"
  },
  "gitHead": "555c9efca600bd35a75c7d711846978a3c55c1aa",
  "homepage": "https://github.com/Zlobin/EventEmitter#readme",
  "keywords": [
    "event",
    "EventEmitter",
    "javascript",
    "node.js",
    "event driven",
    "on",
    "emit",
    "trigger"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "zlobin",
      "email": "creastar@gmail.com"
    }
  ],
  "name": "EventEmitter",
  "optionalDependencies": {},
  "readme": "\n# EventEmitter in JavaScript\n\n## Synopsis\n\nEventEmitter is an implementation of the Event-based architecture in JavaScript.\n\nThe code is written using the ES2015 approaches, including creation of private property through WeakMap that allows you to not to check for clearing memory, and let it do to the garbage collector.\n\nThe module contains the most basic and necessary things: subscription to an event, unsubscribing from the events, running event only once, setting the maximum number of listeners.\n\nThe focus is on code readability, speed of execution, getting rid of all the excess.\n\nYou can use this library in browser either at the server as within the node.js.\n\n## Dependencies\n\nThere are no dependencies. You need only npm installed and just run `npm install` to grab the development dependencies.\n\n## Examples\n\n```javascript\n  let EM = new EventEmitter();\n\n  EM.on('foo', () => {\n    // some code...\n  });\n\n  EM.emit('foo');\n```\n\n```javascript\n  let EM = new EventEmitter();\n\n  EM.once('foo', () => {\n    // some code...\n  });\n\n  EM.emit('foo');\n```\n\n```javascript\n  let EM = new EventEmitter();\n\n  EM.once('foo', (bar, baz) => {\n    // some code...\n  });\n\n  EM.emit('foo', 'var 1 for bar', 'var 2 for baz');\n```\n\n```javascript\n  let EM = new EventEmitter();\n\n  EM.on('foo', () => {\n    // some code...\n  });\n\n  // Note: you can use chaining.\n  EM\n    .emit('foo')\n    .emit('foo')\n    .off('foo');\n```\n\n```javascript\n  // You can set maxNumberOfListeners as a parameter when creating new object.\n  let EM = new EventEmitter(1);\n\n  EM.on('foo', () => {\n    // some code...\n  });\n  // Note: it will show notification in console.\n  EM.on('foo', () => {\n    // some other code...\n  });\n```\n\n## Testing\n\nTests are performed using mocha and expect library.\n\n## Building the documentation\n\nYou can use JSDoc comments found within the source code.\n\n## Minifying\n\nYou can grab minified versions of EventEmitter from /dist path after running `gulp build`.\n\n## Todo\n\n1. Add event's namespace:\n\n```javascript\n  EM.on('foo.*', () => {\n    // some code...\n  });\n```\n\n2. Add events through comma:\n\n```javascript\n  EM.on('foo,bar,baz', () => {\n    // some code...\n  });\n```\n\n3. Add method \"onAny\" for listening each event:\n\n```javascript\n  EM.onAny(() => {\n    // some code...\n  });\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Zlobin/EventEmitter.git"
  },
  "scripts": {
    "test": "mocha --compilers js:babel-core/register"
  },
  "version": "1.0.0"
}
